{"ast":null,"code":"import { Exceptions } from \"src/app/constants/exceptions\";\nimport { Routes } from \"src/app/constants/routes\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/auth/auth.service\";\nimport * as i3 from \"angular-toastify\";\nimport * as i4 from \"src/app/factorys/create-user.factory\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"src/app/services/validators/profile.validator\";\nimport * as i7 from \"../../components/organisms/header/header.component\";\nimport * as i8 from \"@angular/common\";\n\nfunction ProfileComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelementStart(1, \"form\", 3);\n    i0.ɵɵelementStart(2, \"div\", 4);\n    i0.ɵɵelementStart(3, \"div\", 5);\n    i0.ɵɵelementStart(4, \"label\", 6);\n    i0.ɵɵtext(5, \"Nome\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 5);\n    i0.ɵɵelementStart(8, \"label\", 8);\n    i0.ɵɵtext(9, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 5);\n    i0.ɵɵelementStart(12, \"label\", 10);\n    i0.ɵɵtext(13, \"Senha Atual\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 5);\n    i0.ɵɵelementStart(16, \"label\", 12);\n    i0.ɵɵtext(17, \"Confirma\\u00E7\\u00E3o de senha\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"input\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ProfileComponent_div_3_Template_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.submit();\n    });\n    i0.ɵɵtext(20, \"SALVAR\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function ProfileComponent_div_3_Template_button_click_21_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.dashboard();\n    });\n    i0.ɵɵtext(22, \"CANCELAR\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n  }\n}\n\nexport let ProfileComponent = /*#__PURE__*/(() => {\n  class ProfileComponent {\n    constructor(route, router, authService, toastService, createUserFactory, formBuilder, profileValidator) {\n      this.route = route;\n      this.router = router;\n      this.authService = authService;\n      this.toastService = toastService;\n      this.createUserFactory = createUserFactory;\n      this.formBuilder = formBuilder;\n      this.profileValidator = profileValidator;\n      this.form = this.formBuilder.group(this.createUserFactory.create());\n    }\n\n    ngOnInit() {\n      this.routeSub = this.route.params.subscribe(params => {\n        this.getUser(params[\"id\"]);\n      });\n    }\n\n    getUser(id) {\n      this.authService.getUser(id).subscribe(res => {\n        this.user = Object.assign({}, res.body);\n        this.form = this.formBuilder.group(this.createUserFactory.profile(this.user));\n      }, error => {\n        this.toastService.error(Exceptions.userNotAuthorized);\n        this.router.navigate([Routes.login]);\n      });\n    }\n\n    ngOnDestroy() {\n      this.routeSub.unsubscribe();\n    }\n\n    dashboard() {\n      this.router.navigate([Routes.dashboard]);\n    }\n\n    submit() {\n      const validation = this.profileValidator.isValid(this.form.value);\n\n      if (!(validation === null || validation === void 0 ? void 0 : validation.valid)) {\n        return;\n      }\n\n      this.authService.updateProfile(this.form.value).subscribe(success => {\n        this.toastService.info(Exceptions.updateUserSuccess);\n      }, error => {\n        this.toastService.error(Exceptions.updateUserError);\n      });\n    }\n\n  }\n\n  ProfileComponent.ɵfac = function ProfileComponent_Factory(t) {\n    return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.ToastService), i0.ɵɵdirectiveInject(i4.CreateUserFactory), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i6.ProfileValidator));\n  };\n\n  ProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProfileComponent,\n    selectors: [[\"app-profile\"]],\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"title\"], [\"class\", \"content\", 4, \"ngIf\"], [1, \"content\"], [\"novalidate\", \"\", 3, \"formGroup\"], [1, \"form-container\"], [1, \"line\"], [\"for\", \"nome\", 1, \"input-label\"], [\"type\", \"text\", \"formControlName\", \"nome\"], [\"for\", \"email\", 1, \"input-label\"], [\"type\", \"text\", \"formControlName\", \"email\"], [\"for\", \"senha\", 1, \"input-label\"], [\"type\", \"password\", \"formControlName\", \"password\"], [\"for\", \"password confirmation\", 1, \"input-label\"], [\"type\", \"password\", \"formControlName\", \"passwordConfirmation\"], [\"type\", \"submit\", 1, \"confirm\", 3, \"click\"], [3, \"click\"]],\n    template: function ProfileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-header\");\n        i0.ɵɵelementStart(1, \"h1\", 0);\n        i0.ɵɵtext(2, \"Perfil\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, ProfileComponent_div_3_Template, 23, 1, \"div\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.passwordChange);\n      }\n    },\n    directives: [i7.HeaderComponent, i8.NgIf, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName],\n    styles: [\"[_nghost-%COMP%]{display:flex;flex-direction:column;width:100%;background-color:#f2f2f2}.title[_ngcontent-%COMP%]{margin-left:80px;font-family:Montserrat,sans-serif;align-self:baseline}.content[_ngcontent-%COMP%], .password-change-container[_ngcontent-%COMP%]{padding:25px 50px;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;margin-left:80px;background:#fff;border-radius:8px;align-self:baseline;justify-self:center;display:flex;flex-direction:column}.form-container[_ngcontent-%COMP%]{display:flex;flex-direction:column}.line[_ngcontent-%COMP%]{margin-bottom:20px}.label-password[_ngcontent-%COMP%]{margin-top:10px;line-height:16px}.input-label[_ngcontent-%COMP%], .label-password[_ngcontent-%COMP%]{color:rgba(0,0,0,.6);font-size:14px}.input-label[_ngcontent-%COMP%]{line-height:14px;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;margin-left:10px;margin-top:-7px;position:absolute;background:#fff}input[_ngcontent-%COMP%]{border-radius:4px;border-color:rgba(0,0,0,.12);border-width:1px;padding:8px;background:#fff}input[_ngcontent-%COMP%], label[_ngcontent-%COMP%]{font-family:Roboto,sans-serif;text-align:left}button[_ngcontent-%COMP%]{font-family:roboto,sans-serif;font-weight:500;font-size:14px;line-height:16px;text-transform:capitalize;padding:10px 15px;width:150px;border:none;border-radius:4px;width:100%}.confirm[_ngcontent-%COMP%]{margin-bottom:15px;background-color:#007dfe;color:#fff}.confirm[_ngcontent-%COMP%]:hover{filter:brightness(1.3)}.password-change[_ngcontent-%COMP%]{margin-top:10px}\"]\n  });\n  return ProfileComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}